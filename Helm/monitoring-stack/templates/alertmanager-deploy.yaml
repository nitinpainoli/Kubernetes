apiVersion: apps/v1

kind: Deployment
metadata:
  name: {{ template "monitoring-stack.fullname" . }}-alertmanager
  labels:
    app: {{ template "monitoring-stack.name" . }}-alertmanager
    chart: {{ template "monitoring-stack.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.alertmanager.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "monitoring-stack.name" . }}-alertmanager
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "monitoring-stack.name" . }}-alertmanager
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Values.alertmanager.name }}
          image: "{{ .Values.alertmanager.image.repository }}:{{ .Values.alertmanager.image.tag }}"
          command: [ "/bin/alertmanager" ]
          args: [ "--config.file=/etc/alertmanager/config.yml", "--storage.path=/alertmanager" ]
          imagePullPolicy: {{ .Values.alertmanager.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.alertmanager.service.port }}
              protocol: TCP
          volumeMounts:
            - name: alertmanager
              mountPath: "/etc/alertmanager/"
      volumes:
        - name: alertmanager
          configMap:
            name: {{ template "monitoring-stack.fullname" . }}-alertmanager
          #livenessProbe:
          #  httpGet:
          #    path: /
            #  port: http
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
